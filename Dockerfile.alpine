# âš¡ Minimal DevOps Tools Container
# Ultra-lightweight alternative for speed-critical scenarios

FROM alpine:3.18 AS alpine-runtime

# Metadata
LABEL maintainer="DevOps Team"
LABEL description="Minimal Alpine-based DevOps tools"
LABEL version="1.0.0-alpine"

# Tool versions
ENV TERRAFORM_VERSION=1.5.0
ENV KUBECTL_VERSION=1.28.0
ENV HELM_VERSION=3.12.0
ENV YQ_VERSION=4.35.2

# Install dependencies
RUN apk add --no-cache \
    bash \
    curl \
    wget \
    unzip \
    git \
    jq \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Install tools directly
RUN wget -q https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
    && unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
    && mv terraform /usr/local/bin/ \
    && rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
    && chmod +x /usr/local/bin/terraform

RUN curl -LO "https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl" \
    && mv kubectl /usr/local/bin/ \
    && chmod +x /usr/local/bin/kubectl

RUN wget -q https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz \
    && tar -zxf helm-v${HELM_VERSION}-linux-amd64.tar.gz \
    && mv linux-amd64/helm /usr/local/bin/ \
    && rm -rf helm-v${HELM_VERSION}-linux-amd64.tar.gz linux-amd64 \
    && chmod +x /usr/local/bin/helm

RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
    && unzip awscliv2.zip \
    && ./aws/install \
    && rm -rf aws awscliv2.zip

RUN curl -L "https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_amd64" -o /usr/local/bin/yq \
    && chmod +x /usr/local/bin/yq

# Create non-root user
RUN addgroup -g 1000 devops && adduser -u 1000 -G devops -s /bin/bash -D devops

# Set working directory
WORKDIR /workspace

# Switch to non-root user
USER devops

# Verify installation
RUN terraform version && \
    kubectl version --client && \
    helm version && \
    aws --version && \
    yq --version

CMD ["/bin/bash"]
